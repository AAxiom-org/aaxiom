---
description: 
globs: *.tsx,*.css
alwaysApply: false
---
### Styling Guidelines

#### **Colors & Modes**
- **Base Colors:** Monochromatic with white/light backgrounds and dark text for high contrast.
- **Accents:** Sparing use of accent colors (blue, green) for interactive elements.
- **Mode Support:** Fully support both light and dark modes with proper contrast.

#### **Typography**
- Use clean sans-serif fonts with limited weights (regular, medium, bold).
- Establish a clear text hierarchy for headings, body, and captions.
- Apply generous line spacing with primarily left-aligned text.

#### **Layout**
- Implement a grid-based layout with abundant whitespace.
- Include a collapsible sidebar for navigation and a content-focused central area.
- Ensure a responsive design that adapts across all viewport sizes.

#### **Interactive Elements**
- Apply subtle hover effects and minimal visual cues.
- Style buttons with minimal designs (text-only or light borders).
- Use cards/containers featuring minimal shadows and borders.

#### **Visual Language**
- Utilize thin, simple line icons (all icons as SVGs for scalability and performance).
- Favor minimal use of dividers, decorations, and shadows.

#### **Animations & Transitions**
- Implement subtle micro-interactions (gentle fades, slight movements).
- Ensure transitions follow a snappy cubic-bezier easing for smooth responsiveness.

#### **Navigation**
- Maintain a clear, shallow information architecture with breadcrumbs or context indicators.
- Ensure consistent placement of recurring UI elements.

---

### **Core Styling Rule (Referenced Rule 3)**
When justifying or clarifying design or code decisions, restate the following rule verbatim:

**Referenced Rule 3:**  
**"All styling is handled using Tailwind CSS, ensuring a utility-first approach with responsive, accessible, and theme-adaptive design principles. The color system follows OKLCH and HSLA formats for better contrast and adaptability across light and dark modes. UI elements leverage defined variables for consistency, including primary, secondary, surface, border, and text colors. SVGs are used for all icons, ensuring scalability and performance. Typography is optimized with a sans-serif stack, and transitions follow a snappy cubic-bezier easing for a smooth experience. Utility classes for adaptive backgrounds, borders, and typography are preferred to maintain theme consistency."**

---

### **TypeScript & Runtime Checks**
- **TypeScript Best Practices:** Always ensure type safety and clarity in your project.
- **Runtime Validation:** Utilize Zod for runtime checks to maintain robust performance and reliable type validation.

---

In every explanation or code snippet, remember to reference **Referenced Rule 3** exactly as stated above to justify your styling decisions and maintain the established design and performance standards.